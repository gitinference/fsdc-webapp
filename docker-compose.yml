services:
  postgres:
    container_name: fsdc_postgres_staging
    image: postgres:14
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432" # Optional: exposes Postgres to host at localhost:5432
    volumes:
      - pgdata_staging:/var/lib/postgresql/data
    networks:
      - postgres_network

  django:
    container_name: fsdc_webapp_staging
    build:
      context: .
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - .env
    command: >
      sh -c "python manage.py migrate &&
            python manage.py shell -c 'from django.contrib.auth.models import User; User.objects.filter(username=\"${DJANGO_SUPERUSER_USERNAME}\").exists() or User.objects.create_superuser(\"${DJANGO_SUPERUSER_USERNAME}\", \"${DJANGO_SUPERUSER_EMAIL}\", \"${DJANGO_SUPERUSER_PASSWORD}\")' &&
            python manage.py makemigrations &&
            python manage.py migrate &&
            python manage.py collectstatic --noinput &&
            python manage.py runserver 0.0.0.0:8000"

    networks:
      - postgres_network
    volumes:
      - pgdata_staging:/app/data
      - .:/app

  api:
    container_name: FastAPI
    image: ghcr.io/gitinference/gitinference/fsdc-api:staging
    ports:
      - 5071:8000
    restart: always
    env_file:
      - .env
    networks:
      - postgres_network
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000

volumes:
  pgdata_staging:


networks:
  postgres_network:
    driver: bridge
